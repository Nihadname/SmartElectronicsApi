@using SmartElectronicsApi.Mvc.ViewModels.Order
@using SmartElectronicsApi.Mvc.ViewModels.pagination
@model PaginatedResponseVM<OrderAdminListItemVM>

<h1>Order List</h1>

<div class="row">
    <div class="col-md-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <h4 class="card-title">Orders</h4>
                    <a  class="btn btn-dark" asp-action="VerifyOrder" asp-controller="Order">Verify Order</a>
                    <!-- Create button for future extensions -->
                </div>
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th> # </th>
                                <th> Order Date </th>
                                <th> Total Amount </th>
                                <th> Status </th>
                                <th> Shipping Address </th>
                                <th> User </th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Data != null && Model.Data.Count() > 0)
                            {
                                @foreach (var item in Model.Data)
                                {
                                    <tr class="OrderTable" data-id="@item.Id">
                                        <td>@item.Id</td>
                                        <td>@item.OrderDate.ToString("yyyy-MM-dd")</td>
                                        <td>@item.TotalAmount.ToString("C")</td>
                                        <td class="OrderTableStatus" data-id="@item.Id">@item.Status</td>
                                        <td>@item.ShippingAddress</td>
                                        <td>@item.User.UserName</td>
                                        <td>
                                            @if (item.Status == "Completed")
                                            {
                                                <form method="post" asp-action="AcceptanceOfBeingShipped" asp-controller="Order" asp-route-id="@item.Id">
                                                    <button type="submit" class="btn btn-sm btn-primary">ChangeStatusAsShipped</button>
                                                </form>
                                            }
                                            <a onclick="DeleteOrder(@item.Id)" class="btn btn-sm btn-danger">Delete</a>
                                        </td>



                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="7" class="text-center">No Orders Available</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Pagination logic -->
<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.PageNumber - 1, pageSize = Model.PageSize })" tabindex="-1">Previous</a>
        </li>

        @for (int i = 1; i <= Math.Ceiling((double)Model.TotalRecords / Model.PageSize); i++)
        {
            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { pageNumber = i, pageSize = Model.PageSize })">@i</a>
            </li>
        }

        <li class="page-item @(Model.PageNumber == Math.Ceiling((double)Model.TotalRecords / Model.PageSize) ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.PageNumber + 1, pageSize = Model.PageSize })">Next</a>
        </li>
    </ul>
</nav>

