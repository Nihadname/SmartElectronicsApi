<div class="content-wrapper">
    <div class="page-header">
        <h3 class="page-title">
            <span class="page-title-icon bg-gradient-primary text-white me-2">
                <i class="mdi mdi-home"></i>
            </span> Dashboard
        </h3>
        <nav aria-label="breadcrumb">
            <ul class="breadcrumb">
                <li class="breadcrumb-item active" aria-current="page">
                    Overview <i class="mdi mdi-alert-circle-outline icon-sm text-primary align-middle"></i>
                </li>
            </ul>
        </nav>
    </div>

    <div class="row">
        <div class="col-md-4 stretch-card grid-margin">
            <div class="card bg-gradient-danger card-img-holder text-white">
                <div class="card-body">
                    <img src="~/admin/assets/images/dashboard/circle.svg" class="card-img-absolute" alt="circle-image" />
                    <h4 class="font-weight-normal mb-3">
                        Weekly Sales <i class="mdi mdi-chart-line mdi-24px float-right"></i>
                    </h4>
                    <h2 id="weekly-sales" class="mb-5">$ 0</h2>
                    <h6 id="weekly-sales-change" class="card-text"></h6>
                </div>
            </div>
        </div>
        <div class="col-md-4 stretch-card grid-margin">
            <div class="card bg-gradient-info card-img-holder text-white">
                <div class="card-body">
                    <img src="~/admin/assets/images/dashboard/circle.svg" class="card-img-absolute" alt="circle-image" />
                    <h4 class="font-weight-normal mb-3">
                        Monthly Sales <i class="mdi mdi-calendar mdi-24px float-right"></i>
                    </h4>
                    <h2 id="monthly-sales" class="mb-5">$ 0</h2>
                    <h6 id="monthly-sales-change" class="card-text"></h6>
                </div>
            </div>
        </div>
        <div class="col-md-4 stretch-card grid-margin">
            <div class="card bg-gradient-success card-img-holder text-white">
                <div class="card-body">
                    <img src="~/admin/assets/images/dashboard/circle.svg" class="card-img-absolute" alt="circle-image" />
                    <h4 class="font-weight-normal mb-3">
                        Yearly Sales <i class="mdi mdi-calendar-range mdi-24px float-right"></i>
                    </h4>
                    <h2 id="yearly-sales" class="mb-5">$ 0</h2>
                    <h6 id="yearly-sales-change" class="card-text"></h6>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Visit And Sales Statistics Chart -->
        <div class="col-md-7 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Visit And Sales Statistics</h4>
                    <canvas id="visit-sale-chart" class="mt-4"></canvas>
                </div>
            </div>
        </div>

        <!-- User Growth Over Time Chart -->
        <div class="col-md-5 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">User Growth Over Time</h4>
                    <canvas id="user-growth-chart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    // Fetch and update weekly sales data
    async function updateWeeklySalesChart() {
        try {
            const response = await fetch('http://localhost:5246/api/DashBoard/weekly');
            const data = await response.json();
            document.getElementById('weekly-sales').textContent = `$ ${data.totalSales}`;
            document.getElementById('weekly-sales-change').textContent = `Increased by ${data.percentageChange}%`;

            new Chart(document.getElementById('visit-sale-chart'), {
                type: 'bar',
                data: {
                    labels: ['This Week', 'Previous Week'],
                    datasets: [{ label: 'Sales', data: [data.totalSales, data.previousPeriodSales], backgroundColor: ['#4caf50', '#f44336'] }]
                },
                options: { scales: { y: { beginAtZero: true } } }
            });
        } catch (error) {
            console.error('Error fetching weekly sales data:', error);
        }
    }

    // Fetch and update monthly sales data
    async function updateMonthlySalesChart() {
        try {
            const response = await fetch('http://localhost:5246/api/DashBoard/monthly');
            const data = await response.json();
            document.getElementById('monthly-sales').textContent = `$ ${data.totalSales}`;
            document.getElementById('monthly-sales-change').textContent = `Increased by ${data.percentageChange}%`;
        } catch (error) {
            console.error('Error fetching monthly sales data:', error);
        }
    }

    // Fetch and update yearly sales data
    async function updateYearlySalesChart() {
        try {
            const response = await fetch('http://localhost:5246/api/DashBoard/yearly');
            const data = await response.json();
            document.getElementById('yearly-sales').textContent = `$ ${data.totalSales}`;
            document.getElementById('yearly-sales-change').textContent = `Increased by ${data.percentageChange}%`;
        } catch (error) {
            console.error('Error fetching yearly sales data:', error);
        }
    }

    // Fetch and update user growth data
    async function updateUserGrowthChart() {
        try {
            const response = await fetch('http://localhost:5246/api/DashBoard/UserStatistics');
            const data = await response.json();

            new Chart(document.getElementById('user-growth-chart'), {
                type: 'line',
                data: {
                    labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],  // Adjust based on actual data
                    datasets: [{ label: 'New Users', data: [data.newUsersThisMonth, data.newUsersThisWeek, data.totalUsers], borderColor: '#36a2eb', fill: false }]
                },
                options: { scales: { y: { beginAtZero: true } } }
            });
        } catch (error) {
            console.error('Error fetching user growth data:', error);
        }
    }

    // Initialize charts on page load
    document.addEventListener('DOMContentLoaded', () => {
        updateWeeklySalesChart();
        updateMonthlySalesChart();
        updateYearlySalesChart();
        updateUserGrowthChart();
    });
</script>
