@using Newtonsoft.Json
@using SmartElectronicsApi.Mvc.ViewModels.Product
@model ProductReturnVM

<style>
    * {
        padding: 0px;
        margin: 0px;
        box-sizing: border-box;
    }

    .reset-btn {
        width: 100%;
        background-color: #007bff; /* Blue color for the button */
        color: white; /* White text */
        padding: 12px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 18px;
        font-weight: bold;
        margin-top: 10px; /* Space between the buttons */
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

        .reset-btn:hover {
            background-color: #0056b3; /* Darker blue on hover */
            transform: translateY(-3px); /* Slight movement on hover */
        }

    html,
    body {
        position: relative;
        height: 100%;
        width: 100%;
        overflow-x: hidden;
    }

    .reviews-section {
        margin-top: 30px;
        background: #fff;
        border: 1px solid #e0e0e0;
        padding: 20px;
        border-radius: 10px;
        animation: fadeIn 0.5s ease-in-out;
    }

    .review-title {
        font-size: 20px;
        font-weight: bold;
        margin-bottom: 20px;
    }

    .review {
        border: 1px solid #ddd;
        padding: 32px;
        border-radius: 10px;
        background: #fff;
        margin-bottom: 20px;
        box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);
    }

    .review-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .reviewer-name {
        font-weight: bold;
        font-size: 18px;
        margin-bottom: 5px;
        color: #333;
    }

    .review-rating {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .stars {
        font-size: 18px;
        color: #FFD700; /* Gold color for filled stars */
    }

    .review-rating-number {
        font-size: 16px;
        color: #666;
    }

    .review-comment {
        font-size: 14px;
        color: #555;
        margin-top: 10px;
    }

    .review {
        border-top: 1px solid #ddd;
        padding-top: 15px;
        margin-top: 15px;
    }

    .reviewer-name {
        font-weight: bold;
        margin-bottom: 5px;
    }

    .review-rating {
        color: #ffb400;
        margin-bottom: 10px;
    }

    .review-comment {
        font-size: 14px;
        color: #555;
    }

    body {
        background: #f7f7f7;
        font-family: Arial, sans-serif;
        color: #000;
        margin: 0;
        padding: 0;
    }

    .swiper-container {
        width: 100%;
        height: 100%;
    }

    .swiper-slide {
        text-align: center;
        font-size: 18px;
        background: #fff;
        display: flex;
        justify-content: center;
        align-items: center;
    }

        .swiper-slide img {
            display: block;
            height: 70%;
            object-fit: contain;
            border-radius: 10px;
        }

    .mySwiper {
        height: 500px;
    }

    .mySwiper2 {
        height: 100px;
        padding: 10px 0;
    }

        .mySwiper2 .swiper-slide {
            width: 25%;
            height: 100%;
            opacity: 0.4;
            transition: opacity 0.3s ease;
        }

        .mySwiper2 .swiper-slide-thumb-active {
            opacity: 1;
        }

    /* Product details */
    .product-details {
        border: 1px solid #e0e0e0;
        padding: 20px;
        border-radius: 10px;
        background: #fff;
    }

    .product-name {
        font-size: 26px;
        font-weight: bold;
        margin-bottom: 15px;
        color: #333;
    }

    .product-description {
        font-size: 16px;
        margin-bottom: 15px;
        color: #666;
        word-wrap: break-word; /* Ensure text wraps correctly */
        white-space: normal;
    }

    .product-price {
        font-size: 22px;
        font-weight: bold;
        color: #d32f2f;
        margin-bottom: 10px;
    }

    .product-stock {
        font-size: 14px;
        color: #388e3c;
        margin-bottom: 10px;
    }

    .add-to-cart-btn {
        width: 100%;
        background-color: #ff6000;
        color: white;
        padding: 12px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 18px;
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

        .add-to-cart-btn:hover {
            background-color: #d44b00;
            transform: translateY(-3px);
        }

    /* Thumbnail cards */
    .thumbnail-container {
        display: flex;
        gap: 10px;
        margin-bottom: 15px;
    }

    .thumbnail-card {
        width: 80px;
        height: 80px;
        border: 1px solid #ddd;
        cursor: pointer;
        border-radius: 5px;
        overflow: hidden;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .thumbnail-card img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .thumbnail-card.active {
            border-color: #ff6000;
            transform: scale(1.1);
            box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.2);
        }

        .thumbnail-card:hover {
            transform: scale(1.05);
            box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);
        }

    .spec-table-container {
        margin-top: 50px;
        padding: 20px;
        background-color: #f9f9f9;
        border-radius: 10px;
        box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.1);
    }

    /* Table title */
    .table-title {
        text-align: center;
        font-size: 28px;
        font-weight: bold;
        margin-bottom: 30px;
        color: #333;
        text-transform: uppercase;
        letter-spacing: 1.5px;
        border-bottom: 2px solid #ff6000;
        display: inline-block;
        padding-bottom: 10px;
    }

    /* Main table design */
    .spec-table {
        width: 100%;
        border-collapse: collapse;
        margin: 0 auto;
    }

        .spec-table th,
        .spec-table td {
            padding: 15px;
            text-align: left;
            font-size: 16px;
            border-bottom: 1px solid #ddd;
        }

    /* Header for each group */
    .spec-group-header th {
        background-color: #ff6000;
        color: white;
        font-weight: bold;
        font-size: 18px;
        text-transform: uppercase;
        border-radius: 10px;
    }

    .spec-group-header th {
        padding: 15px;
    }

    /* Table row styling */
    .spec-table td {
        background-color: #fff;
        transition: background-color 0.3s ease;
    }

    .spec-table tr:hover td {
        background-color: #f2f2f2;
    }

    /* Last row without border */
    .spec-table tr:last-child td {
        border-bottom: none;
    }

    /* Accent colors for specs */
    .spec-table td:first-child {
        font-weight: bold;
        color: #555;
    }

    .spec-table td:last-child {
        color: #333;
    }

    /* Responsive design for smaller screens */
    media (max-width: 768px) {
        .spec-table-container

    {
        padding: 15px;
    }

    .table-title {
        font-size: 24px;
    }

    .spec-table th,
    .spec-table td {
        font-size: 14px;
        padding: 10px;
    }

    }

    .product-rating-cart {
        margin-top: 20px;
        padding: 10px 0;
        border-top: 1px solid #ddd;
        font-size: 16px;
        color: #333;
    }

    .rating-section {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 5px;
    }

    .product-rating {
        font-size: 22px;
        font-weight: bold;
        color: #333;
    }

    .stars {
        color: #FFD700; /* Gold for stars */
        font-size: 20px;
    }

    .review-count {
        color: #666;
        font-size: 14px;
    }

    .questions-answers {
        font-size: 14px;
        color: #666;
        display: flex;
        align-items: center;
        gap: 5px;
    }

        .questions-answers img {
            width: 16px;
            height: 16px;
        }

    .cart-added-section {
        display: flex;
        align-items: center;
        font-size: 14px;
        margin-top: 10px;
        color: #333;
    }

    .cart-icon {
        font-size: 18px;
        margin-right: 5px;
        color: #333;
    }

    .cart-count {
        color: #FF6000; /* Highlighted color for the cart count */
        font-weight: bold;
        margin-left: 10px;
    }

</style>

<div class="container">
    <div class="row product-section">
        <!-- Product Details -->
        <div class="col-12 col-lg-6">
            <!-- Main Swiper -->
            <div class="swiper mySwiper">
                <div class="swiper-wrapper">
                    @foreach (var imageUrl in Model.ImageUrls)
                    {
                        <div class="swiper-slide">
                            <img src="@imageUrl" />
                        </div>
                    }
                </div>
                <!-- Swiper navigation buttons -->
                <div class="swiper-button-next"></div>
                <div class="swiper-button-prev"></div>
            </div>

            <!-- Thumbnail Swiper -->
            <div class="swiper mySwiper2">
                <div class="swiper-wrapper">
                    @foreach (var imageUrl in Model.ImageUrls)
                    {
                        <div class="swiper-slide">
                            <img src="@imageUrl" />
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-12 col-lg-6 product-details-section">
            <div class="product-details">
                <h2 id="product-name">@(Model.Name.Trim())</h2>

                <!-- Variation Name -->
                <h4 id="variation-name"></h4>

                <!-- Product Rating and Cart Section -->
                <div class="product-rating-cart">
                    <div class="rating-section">
                        <span class="product-rating">4.4</span>
                        <span class="stars">★★★★☆</span>
                        <span class="review-count">8763 Değerlendirme</span>
                    </div>
                </div>
                <div class="cart-added-section">
                    <span class="cart-icon">🛒</span>
                    <span>3 gün ərzində</span>
                    <span class="cart-count">@ViewBag.BaskCount nəfər əlavə etdi.</span>
                </div>
                <!-- Product Description -->
                <p class="product-description">@Model.Description</p>

                <!-- Product Code -->
                <p class="product-code">Product Code: @Model.ProductCode</p>

                <!-- Product Price and Discount -->
                <p id="product-price" class="product-price">
                    @if (Model.DiscountPercentage > 0)
                    {
                        <span>Discounted Price: $@(Model.DiscountedPrice.HasValue ? Model.DiscountedPrice.Value.ToString("F2") : Model.Price.ToString("F2"))</span>
                        <span class="original-price"><del>Original Price: $@Model.Price.ToString("F2")</del></span>
                        <span class="discount-badge">@Model.DiscountPercentage% Off</span>
                    }
                    else
                    {
                        <span>$@Model.Price.ToString("F2")</span>
                    }
                </p>



                <!-- Stock Quantity -->
                <p id="product-stock" class="product-stock">In Stock: @Model.StockQuantity units</p>

                <!-- Thumbnail Cards (Variations) -->
                <div class="thumbnail-container">
                    @foreach (var variation in Model.productVariationListItemDtos)
                    {
                        <div class="thumbnail-card"
                             data-variation-id="@variation.Id"
                             data-price="@(variation.DiscountedPrice.HasValue ? variation.DiscountedPrice.Value.ToString("F2") : variation.Price?.ToString("F2"))"
                             data-original-price="@(variation.Price.HasValue ? variation.Price.Value.ToString("F2") : "0.00")"
                             data-discount="@(variation.DiscountPercentage.HasValue ? variation.DiscountPercentage.Value.ToString("F2") : "0")"
                             data-stock="@variation.StockQuantity"
                             data-images='@JsonConvert.SerializeObject(variation.ImageUrls)'
                             data-name="@variation.VariationName">
                            <img src="@variation.ImageUrls.FirstOrDefault()" alt="Variation Image">
                        </div>

                    }
                </div>

                <!-- Add to Cart Button -->
                <button class="add-to-cart-btn" >Add to Basket</button>
                @if (Model.productVariationListItemDtos != null && Model.productVariationListItemDtos.Count() > 0)
                {
                    <button class="reset-btn" id="reset-btn">Reset to Default</button>
                }


            </div>
        </div>
    </div>
</div>
<div class="spec-table-container">
    <h3 class="table-title">Technical Specifications</h3>
    <table class="spec-table">
        @if (Model.parametrGroupListItemDtos != null && Model.parametrGroupListItemDtos.Any())
        {
            @foreach (var paramGroup in Model.parametrGroupListItemDtos)
            {
                if (paramGroup != null && paramGroup.parametrValues != null)
                {
                    <tr>
                        <th colspan="2">@paramGroup.Name</th>
                    </tr>
                    @foreach (var param in paramGroup.parametrValues)
                    {
                        if (param != null)
                        {
                            <tr>
                                <td>@param.Type</td>
                                <td>@param.Value</td>
                            </tr>
                        }
                    }
                }
            }
        }
        else
        {
            <tr>
                <td colspan="2">No specifications available for this product.</td>
            </tr>
        }
    </table>
</div>
<div class="modal fade" id="lightboxModal" tabindex="-1" aria-labelledby="lightboxModalLabel" aria-hidden="true">
    <div class="modal-dialog ">
        <div class="modal-content">
            <div class="modal-body p-0 m-0">
                <img src="" id="lightboxImg" alt="Product Image" class="w-100 h-100" style="object-fit: cover;">
            </div>
        </div>
    </div>
</div>
<!-- Reviews Section -->
<div class="reviews-section">
    <h3 class="review-title">Customer Reviews</h3>

    <div class="swiper mySwiperReviews">
        <div class="swiper-wrapper">
            <!-- Review 1 -->
            <div class="swiper-slide">
                <div class="review">
                    <div class="review-header">
                        <p class="reviewer-name">John Doe</p>
                        <div class="review-rating">
                            <!-- Rating Stars (static) -->
                            <span class="stars">
                                ★★★★☆
                            </span>
                            <span class="review-rating-number">4/5</span>
                        </div>
                    </div>
                    <p class="review-comment">Amazing product! Quality exceeded my expectations. I highly recommend it!</p>
                </div>
            </div>

            <!-- Review 2 -->
            <div class="swiper-slide">
                <div class="review">
                    <div class="review-header">
                        <p class="reviewer-name">Jane Smith</p>
                        <div class="review-rating">
                            <span class="stars">
                                ★★★★★
                            </span>
                            <span class="review-rating-number">5/5</span>
                        </div>
                    </div>
                    <p class="review-comment">Fantastic quality and fast shipping. Will definitely buy again.</p>
                </div>
            </div>

            <!-- Review 3 -->
            <div class="swiper-slide">
                <div class="review">
                    <div class="review-header">
                        <p class="reviewer-name">Mark Wilson</p>
                        <div class="review-rating">
                            <span class="stars">
                                ★★★☆☆
                            </span>
                            <span class="review-rating-number">3/5</span>
                        </div>
                    </div>
                    <p class="review-comment">Good product, but shipping took a bit longer than expected.</p>
                </div>
            </div>
            <div class="swiper-slide">
                <div class="review">
                    <div class="review-header">
                        <p class="reviewer-name">John Doe</p>
                        <div class="review-rating">
                            <!-- Rating Stars (static) -->
                            <span class="stars">
                                ★★★★☆
                            </span>
                            <span class="review-rating-number">4/5</span>
                        </div>
                    </div>
                    <p class="review-comment">Amazing product! Quality exceeded my expectations. I highly recommend it!</p>
                </div>
            </div>

            <!-- Review 2 -->
            <div class="swiper-slide">
                <div class="review">
                    <div class="review-header">
                        <p class="reviewer-name">Jane Smith</p>
                        <div class="review-rating">
                            <span class="stars">
                                ★★★★★
                            </span>
                            <span class="review-rating-number">5/5</span>
                        </div>
                    </div>
                    <p class="review-comment">Fantastic quality and fast shipping. Will definitely buy again.</p>
                </div>
            </div>

            <!-- Review 3 -->
            <div class="swiper-slide">
                <div class="review">
                    <div class="review-header">
                        <p class="reviewer-name">Mark Wilson</p>
                        <div class="review-rating">
                            <span class="stars">
                                ★★★☆☆
                            </span>
                            <span class="review-rating-number">3/5</span>
                        </div>
                    </div>
                    <p class="review-comment">Good product, but shipping took a bit longer than expected.</p>
                </div>
            </div>
        </div>

        <!-- Swiper navigation -->
        <div class="swiper-pagination"></div>
        <div class="swiper-button-next"></div>
        <div class="swiper-button-prev"></div>
    </div>
</div>
>  <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-element-bundle.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

<script>

    var reviewSwiper = new Swiper('.mySwiperReviews', {
        slidesPerView: 2,
        spaceBetween: 10,
        pagination: {
            el: '.swiper-pagination',
            clickable: true,
        },
        navigation: {
            nextEl: '.swiper-button-next',
            prevEl: '.swiper-button-prev',
        },
    });
    document.addEventListener('DOMContentLoaded', function () {
        const thumbnailCards = document.querySelectorAll('.thumbnail-card');
        let selectedVariationId = null; // To store selected variation ID
        const productPrice = document.getElementById('product-price');
        const productStock = document.getElementById('product-stock');
        const Name = document.querySelector('#product-name');
        const resetButton = document.getElementById('reset-btn');

        // Initialize Swiper for the main and thumbnail sliders
        const mainSwiper = new Swiper('.mySwiper', {
            spaceBetween: 10,
            navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev',
            },
        });

        const thumbnailSwiper = new Swiper('.mySwiper2', {
            spaceBetween: 10,
            slidesPerView: 4,
            freeMode: true,
            watchSlidesProgress: true
        });

        // Function to update the slider images
        function updateSliderImages(images) {
            mainSwiper.removeAllSlides(); // Clear existing slides
            images.forEach((imgSrc) => {
                mainSwiper.appendSlide(
                    `<div class="swiper-slide">
                        <img src="${imgSrc}" style="height: 70%; object-fit: contain; border-radius: 10px;" />
                    </div>`
                );
            });
            mainSwiper.update(); // Refresh Swiper
        }

        // Function to update product details
        function updateProductDetails(variation) {
            selectedVariationId = variation.variationId;  // Set selected variation ID
            console.log('Selected Variation ID:', selectedVariationId); // Debug log

            if (variation.discount > 0 && variation.price != null) {
                productPrice.innerHTML = `
                    <span>Discounted Price: $${variation.price}</span>
                    <span class="discount-badge">${variation.discount}% Off</span>
                `;
            } else {
                productPrice.innerHTML = `<span>$${variation.price}</span>`;
            }

            // Update stock
            productStock.textContent = `In Stock: ${variation.stock} units`;

            // Update variation name
            Name.textContent = variation.name;

            // Update slider images
            updateSliderImages(variation.images);
        }

        // Event listener for thumbnail clicks
        thumbnailCards.forEach((card) => {
            card.addEventListener('click', function () {
                // Remove active class from all cards
                thumbnailCards.forEach((c) => c.classList.remove('active'));

                // Add active class to clicked card
                this.classList.add('active');

                // Prepare variation data
                const variation = {
                    variationId: this.dataset.variationId, // Get the variation ID
                    price: this.dataset.price,
                    discount: this.dataset.discount,
                    stock: this.dataset.stock,
                    images: JSON.parse(this.dataset.images), // Parse the dataset images which is a valid JSON array
                    name: this.dataset.name
                };

                // Update product details based on the selected variation
                updateProductDetails(variation);
            });
        });

        // Event listener for reset button to return to default product values
        if (resetButton) {
            resetButton.addEventListener('click', function () {
                const defaultVariation = {
                    variationId: null,
                    price: "@(Model.DiscountedPrice.HasValue ? Model.DiscountedPrice : Model.Price)",
                    discount: "@Model.DiscountPercentage",
                    stock: "@Model.StockQuantity",
                    images: @Html.Raw(JsonConvert.SerializeObject(Model.ImageUrls)), // Injecting the image URLs as raw JSON array
                    name: "@Model.Name"
                };

                updateProductDetails(defaultVariation);
            });
        }

        document.querySelector('.add-to-cart-btn').addEventListener('click', function () {
            if (selectedVariationId) {
                // Call function with selected variation ID
                addtoBasket(@Model.Id, selectedVariationId);
            } else {
                // No variation selected, call function without variation ID
                addtoBasket(@Model.Id, null);
            }
        });
    });

</script>